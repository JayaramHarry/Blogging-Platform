{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91789\\\\OneDrive\\\\Desktop\\\\simple-blogging-platform\\\\Blogging-Platform\\\\frontend\\\\src\\\\components\\\\PostForm\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport apiUrl from '../../apiConfig.js';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = ({\n  postId,\n  onSubmit,\n  onCancel,\n  initialValues\n}) => {\n  _s();\n  const [title, setTitle] = useState((initialValues === null || initialValues === void 0 ? void 0 : initialValues.title) || '');\n  const [content, setContent] = useState((initialValues === null || initialValues === void 0 ? void 0 : initialValues.content) || '');\n  useEffect(() => {\n    if (initialValues) {\n      // If initialValues are provided (for editing), set the form fields\n      setTitle(initialValues.title || '');\n      setContent(initialValues.content || '');\n    }\n  }, [initialValues]);\n\n  // Creating new blog\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const postData = {\n      title,\n      content\n    };\n    try {\n      if (postId) {\n        const response = await fetch(`${apiUrl}/posts/${postId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(postData)\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update post');\n        }\n      } else {\n        const response = await fetch(`${apiUrl}/posts`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(postData)\n        });\n        if (!response.ok) {\n          throw new Error('Failed to create post');\n        }\n      }\n      setTitle('');\n      setContent('');\n      if (onSubmit) {\n        onSubmit(postId, postData); // Pass both postId and postData\n      }\n    } catch (error) {\n      console.error('Error creating/updating post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create-post-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"TITLE\",\n      className: \"title-input\",\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      rows: \"20\",\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Write your blog content here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-success \",\n      type: \"submit\",\n      children: postId ? 'Update' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), postId && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-danger m-3\",\n      type: \"button\",\n      onClick: onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"ZcchRVolexPgKSgpzChNvmOYHYA=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","useEffect","apiUrl","jsxDEV","_jsxDEV","PostForm","postId","onSubmit","onCancel","initialValues","_s","title","setTitle","content","setContent","handleSubmit","e","preventDefault","postData","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","className","children","placeholder","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","rows","style","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91789/OneDrive/Desktop/simple-blogging-platform/Blogging-Platform/frontend/src/components/PostForm/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport apiUrl from '../../apiConfig.js';\r\nimport \"./style.css\"\r\n\r\nconst PostForm = ({ postId, onSubmit, onCancel, initialValues }) => {\r\n  const [title, setTitle] = useState(initialValues?.title || '');\r\n  const [content, setContent] = useState(initialValues?.content || '');\r\n\r\n  useEffect(() => {\r\n    if (initialValues) {\r\n      // If initialValues are provided (for editing), set the form fields\r\n      setTitle(initialValues.title || '');\r\n      setContent(initialValues.content || '');\r\n    }\r\n  }, [initialValues]);\r\n\r\n  // Creating new blog\r\n  const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        const postData = { title, content };\r\n    \r\n        try {\r\n          if (postId) {\r\n            const response = await fetch(`${apiUrl}/posts/${postId}`, {\r\n              method: 'PUT',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify(postData),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n              throw new Error('Failed to update post');\r\n            }\r\n          } else {\r\n            const response = await fetch(`${apiUrl}/posts`, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify(postData),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n              throw new Error('Failed to create post');\r\n            }\r\n          }\r\n    \r\n          setTitle('');\r\n          setContent('');\r\n\r\n          if (onSubmit) {\r\n            onSubmit(postId, postData); // Pass both postId and postData\r\n          }\r\n        } catch (error) {\r\n          console.error('Error creating/updating post:', error);\r\n        }\r\n\r\n        \r\n\r\n      };\r\n\r\n  return (\r\n    <form className='create-post-form' onSubmit={handleSubmit}>\r\n      {/*Title input field*/}\r\n      <input\r\n      placeholder='TITLE'\r\n        className='title-input'\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n\r\n      {/* Full-page textarea for content */}\r\n      <textarea\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n        rows=\"20\"\r\n        style={{ width: '100%' }}\r\n        placeholder=\"Write your blog content here...\"\r\n      />\r\n\r\n      <button className=\"btn btn-outline-success \" type=\"submit\">{postId ? 'Update' : 'Submit'}</button>\r\n      {postId && <button className=\"btn btn-outline-danger m-3\" type=\"button\" onClick={onCancel}>Cancel</button>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}